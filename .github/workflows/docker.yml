# Builds a Docker image and publishes it into Dockerhub
name: Docker Base

on:
  workflow_call:

    inputs:
      dockerhub_username:
        required: true
        type: string
      project_name:
        required: true
        type: string
      docker_tag:
        required: false
        type: string

    secrets:
      DOCKERHUB_TOKEN:
        required: true

jobs:
  build-and-publish-image:
    # This job builds and pushes docker images into dockerhub. Created images are tagged in format: supplied-tag, supplied-tag-${arch}
    strategy:
      matrix:
        arch: [aarch64, amd64] 
    runs-on: ubuntu-latest
    name: Docker build & release
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # sets the tag env variable
      - uses: olegtarasov/get-tag@v2.1
        id: tagName
      - name: Declare build variables
        id: vars
        shell: bash
        run: |
          echo "::set-output name=commit_hash::$(git rev-parse HEAD)"
          echo "::set-output name=curr_date::$(date --rfc-3339=seconds)"
      - name: Set the version tags
        # If the workflow contains a tag, set version docker tags in format "user/project:tag" and "user/project:tag-arch" 
        id: version_tag
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          echo "::set-output name=version_tag_arch::${{ inputs.dockerhub_username }}/${{ inputs.project_name}}:${{ steps.tagName.outputs.tag }}-${{ matrix.arch }}"
          echo "::set-output name=version_tag::${{ inputs.dockerhub_username }}/${{ inputs.project_name}}:${{ steps.tagName.outputs.tag }}"
      - name: Download goenvtemplator
        run: |
          wget https://github.com/seznam/goenvtemplator/releases/download/v2.1.0/goenvtemplator2-amd64 -O /usr/local/bin/goenvtemplator2
          chmod +x /usr/local/bin/goenvtemplator2
      - name: Instantiate dockerfile template
        run: goenvtemplator2 -env-file docker/${{ matrix.arch }}.conf -template ./docker/Dockerfile.in:./Dockerfile && cat ./Dockerfile
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ steps.version_tag.outputs.version_tag }}
            ${{ steps.version_tag.outputs.version_tag_arch }}
            ${{ inputs.docker_tag }}-${{ matrix.arch }}
            ${{ inputs.docker_tag }}
          context: .
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.curr_date }}
            BUILD_VERSION=${{ steps.tagName.outputs.tag }}
            REVISION=${{ steps.vars.outputs.commit_hash }}
          platforms: linux/${{ matrix.arch }}

  merge-images:
    # Merges images tagged with architecture into a generic tag,
    # e.g., meesign:latest-amd64, meesign:latest-aarch64 into meesign:latest
    needs: build-and-publish-image
    name: Merge images
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: olegtarasov/get-tag@v2.1
        id: tagName
      - name: Set version tags
        id: version_tag
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: echo "::set-output name=version_tag::${{ inputs.dockerhub_username }}/${{ inputs.project_name}}:${{ steps.tagName.outputs.tag }}"
      - name: Set amend options for versioned images
        # Sets the version_amends variable to a list of --ammend options with arguments equal to architecture version tags tags,
        # e.g., --ammend crocsmuni/meesign:1.0.0-aarch64 --ammend crocsmuni/meesign:1.0.0-amd64
        id: version_amends
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: echo "::set-output name=version_amends::$(echo '--amend ${{ steps.version_tag.outputs.version_tag }}'-{aarch64,amd64})"
      - name: Merge untagged releases 
        run: |
          docker manifest create ${{ inputs.docker_tag }} $(echo "--amend ${{ inputs.docker_tag }}"-{aarch64,amd64}) ${{ steps.version_amends.outputs.version_amends }}
          docker manifest push ${{ inputs.docker_tag }}
      - name: Merge tagged releases 
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          docker manifest create  ${{ steps.version_tag.outputs.version_tag }} $(echo "--amend ${{ steps.version_tag.outputs.version_tag }}"-{aarch64,amd64}) $(echo "--amend ${{ inputs.docker_tag }}"-{aarch64,amd64}) 
          docker manifest push ${{ steps.version_tag.outputs.version_tag }}